{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","get","console","log","map","Date","objeto","data","quantidade","valor","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService {\n\n  constructor() {\n\n    this._http = new HttpService();\n  }\n\n  obterNegociacoes() {\n\n    return Promise.all([\n          this.obterNegociacoesDaSemana(), \n          this.obterNegociacoesDaSemanaAnterior(), \n          this.obterNegociacoesDaSemanaRetrasada()]\n      ).then(periodos => {\n        let negociacoes = periodos.reduce((dados, periodo) => dados.concat(periodo), []);\n        return negociacoes;\n      }).catch(erro => {\n            throw new Error(erro);\n        });\n  }\n\n\n  obterNegociacoesDaSemana() {\n\n         return this._http\n              .get('negociacoes/semana')\n              .then(negociacoes => {\n                  console.log(negociacoes);\n                  return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n              })\n              .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana');\n              });  \n  }\n\n  obterNegociacoesDaSemanaAnterior() {\n\n      return this._http\n              .get('negociacoes/anterior')\n              .then(negociacoes => {\n                  console.log(negociacoes);\n                  return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n              })\n              .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana anterior');\n              });  \n  }\n\n  obterNegociacoesDaSemanaRetrasada() {\n\n      return this._http\n              .get('negociacoes/retrasada')\n              .then(negociacoes => {\n                  console.log(negociacoes);\n                  return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n              })\n              .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana retrasada');\n              });  \n  }\n\n  cadastra(negociacao) {\n\n    return ConnectionFactory\n          .getConnection()\n          .then(connection => new NegociacaoDao(connection))\n          .then(dao => dao.adiciona(negociacao))\n          .then(() => 'Negociacão adicionada com sucesso!')\n          .catch(erro => {\n            console.log(erro);\n            throw new Error('Não foi possível adicionar a negociação')\n          });\n  }\n\n  lista() {\n\n    return ConnectionFactory\n          .getConnection()\n          .then(connection => new NegociacaoDao(connection))\n          .then(dao => dao.listaTodos())\n          .catch((erro) => {\n              console.log(erro);\n              throw new Error('Não foi possível obter as negociações')\n          });\n  }\n\n  apaga() {\n\n    return ConnectionFactory\n          .getConnection()\n          .then(connection => new NegociacaoDao(connection))\n          .then(dao => dao.apagaTodos())\n          .then(() => 'Negociações apagadas com sucesso!')\n          .catch((erro) => {\n              console.log(erro);\n              throw new Error('Não foi possível apagar as negociações')\n          });\n\n  }\n\n  importa(listaAtual) {\n\n       return this.obterNegociacoes()\n          .then(negociacoes => \n              negociacoes.filter(negociacao => \n                !listaAtual.some(negociacaoExistente => \n                  negociacao.isEquals(negociacaoExistente))\n                )\n            )\n          .catch(erro => {\n            console.log(erro);\n            throw new Error('Não foi possível buscar negociações para importar');\n          });\n  }\n}"]}